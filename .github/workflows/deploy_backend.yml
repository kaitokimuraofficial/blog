name: EC2 auto deploy(backend)

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - run: |
          cd ./backend
          go version
          go get .
          go build -trimpath -ldflags "-w -s" -o app
      - uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./backend/app

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact

      - name: Uses configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/oidc-role"

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Get IP Address
        run: |
          IPV4=$(curl https://checkip.amazonaws.com)
          echo "IPV4=$IPV4" >> $GITHUB_ENV

      - name: Deploy
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.IPV4 }}/32
          echo "${{ secrets.PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key app ${{ env.EC2_PUBLIC_DNS }}:/app
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ env.IPV4 }}/32
        env:
          EC2_PUBLIC_DNS: ${{ secrets.USER_NAME }}@${{ secrets.HOST_NAME }}
