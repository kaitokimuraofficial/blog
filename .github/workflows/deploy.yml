name: EC2 auto deploy

on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          cd ./frontend
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: cd ./frontend && npm i
      - run: cd ./frontend && npm run build:prod
        env:
          ENV_IMAGE_URL: ${{ secrets.ENV_IMAGE_URL }}
          ENV_PROXY_API_URL: ${{ secrets.ENV_PROXY_API_URL }}
      - uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./frontend/dist/*

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
      - id: ip
        uses: haythem/public-ip@v1.3
      - uses: actions/checkout@v4

      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Deploy
        run: |

          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
          echo "${{ secrets.PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key artifact/assets ${{ secrets.USER_NAME }}@${{ secrets.HOST_NAME }}:/var/www/html/assets
          scp -o StrictHostKeyChecking=no -i private_key artifact/index.html ${{ secrets.USER_NAME }}@${{ secrets.HOST_NAME }}:/var/www/html/index.html
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
